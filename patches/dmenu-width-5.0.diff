diff --git a/config.h b/config.h
index 760537a..ee149ce 100644
--- a/config.h
+++ b/config.h
@@ -28,3 +28,6 @@ static const char worddelimiters[] = " ";
 
 /* Size of the window border */
 static const unsigned int border_width = 2;
+
+/* Default width of the window; can be overridden using the -w option */
+static const unsigned int default_width = 400;
diff --git a/dmenu.1 b/dmenu.1
index 323f93c..0ed7e6a 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -21,7 +21,7 @@ dmenu \- dynamic menu
 .RB [ \-sf
 .IR color ]
 .RB [ \-w
-.IR windowid ]
+.IR width ]
 .P
 .BR dmenu_run " ..."
 .SH DESCRIPTION
@@ -78,8 +78,8 @@ defines the selected foreground color.
 .B \-v
 prints version information to stdout, then exits.
 .TP
-.BI \-w " windowid"
-embed into windowid.
+.BI \-w " width"
+sets the width of the dmenu window.
 .SH USAGE
 dmenu is completely controlled by the keyboard.  Items are selected using the
 arrow keys, page up, page down, home, and end.
diff --git a/dmenu.c b/dmenu.c
index 73dfa95..f386ff0 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -36,10 +36,12 @@ struct item {
 	int out;
 };
 
+#include "config.h"
+
 static char numbers[NUMBERSBUFSIZE] = "";
 static char text[BUFSIZ] = "";
-static char *embed;
 static int bh, mw, mh;
+static unsigned int dmw = default_width; /* make dmenu this wide */
 static int inputw = 0, promptw;
 static int lrpad; /* sum of left and right padding */
 static size_t cursor;
@@ -56,8 +58,6 @@ static XIC xic;
 static Drw *drw;
 static Clr *scheme[SchemeLast];
 
-#include "config.h"
-
 static int (*fstrncmp)(const char *, const char *, size_t) = strncmp;
 static char *(*fstrstr)(const char *, const char *) = strstr;
 
@@ -267,8 +267,6 @@ grabkeyboard(void)
 	struct timespec ts = { .tv_sec = 0, .tv_nsec = 1000000  };
 	int i;
 
-	if (embed)
-		return;
 	/* try to grab keyboard, we may have to wait for another process to ungrab */
 	for (i = 0; i < 1000; i++) {
 		if (XGrabKeyboard(dpy, DefaultRootWindow(dpy), True, GrabModeAsync,
@@ -707,7 +705,7 @@ setup(void)
 				if (INTERSECT(x, y, 1, 1, info[i]))
 					break;
 
-		mw = MIN(MAX(max_textw() + promptw, 100), info[i].width);
+		mw = dmw;
 		x = info[i].x_org + ((info[i].width  - mw) / 2);
 		y = info[i].y_org + ((info[i].height - mh) / 2);
 		XFree(info);
@@ -743,15 +741,6 @@ setup(void)
 	                XNClientWindow, win, XNFocusWindow, win, NULL);
 
 	XMapRaised(dpy, win);
-	if (embed) {
-		XSelectInput(dpy, parentwin, FocusChangeMask | SubstructureNotifyMask);
-		if (XQueryTree(dpy, parentwin, &dw, &w, &dws, &du) && dws) {
-			for (i = 0; i < du && dws[i] != win; ++i)
-				XSelectInput(dpy, dws[i], FocusChangeMask);
-			XFree(dws);
-		}
-		grabfocus();
-	}
 	drw_resize(drw, mw, mh);
 	drawmenu();
 }
@@ -760,7 +749,7 @@ static void
 usage(void)
 {
 	fputs("usage: dmenu [-bfiv] [-l lines] [-p prompt] [-fn font] [-m monitor]\n"
-	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-w windowid]\n", stderr);
+	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-w width]\n", stderr);
 	exit(1);
 }
 
@@ -802,7 +791,7 @@ main(int argc, char *argv[])
 		else if (!strcmp(argv[i], "-sf"))  /* selected foreground color */
 			colors[SchemeSel][ColFg] = argv[++i];
 		else if (!strcmp(argv[i], "-w"))   /* embedding window id */
-			embed = argv[++i];
+			dmw = atoi(argv[++i]);
 		else
 			usage();
 
@@ -812,8 +801,7 @@ main(int argc, char *argv[])
 		die("cannot open display");
 	screen = DefaultScreen(dpy);
 	root = RootWindow(dpy, screen);
-	if (!embed || !(parentwin = strtol(embed, NULL, 0)))
-		parentwin = root;
+	parentwin = root;
 	if (!XGetWindowAttributes(dpy, parentwin, &wa))
 		die("could not get embedding window attributes: 0x%lx",
 		    parentwin);
